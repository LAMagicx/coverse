services:
  db:
    container_name: coverse-db
    image: surrealdb/surrealdb:v2.0.2
    ports:
      - 8000:8000
    env_file:
      - .env
    entrypoint: 
      - /surreal 
      - start 
      - --username
      - $SURREAL_USERNAME
      - --password
      - $SURREAL_PASSWORD
    volumes:
      - ./coverse-data/:/mydata
    networks:
      - server-net
    restart: always
    healthcheck:
      test: /surreal isready
      interval: 10s
      timeout: 5s
      retries: 2
    environment:
      - PYTHONDONTWRITEBYTECODE=1
      - SURREAL_EXPERIMENTAL_GRAPHQL=true

  migrate:
    container_name: coverse-db-migrate
    image: surrealdb/surrealdb:v2.0.1
    volumes:
      - ./surrealdb.surql:/etc/surrealdb.surql
    entrypoint: 
      - /surreal 
      - import 
      - --username
      - $SURREAL_USERNAME
      - --password
      - $SURREAL_PASSWORD
      - --endpoint
      - http://coverse-db:8000
      - --namespace
      - test
      - --database
      - test
      - /etc/surrealdb.surql
    networks:
      - server-net
    depends_on:
      db:
        condition: service_started

  # api:
  #   # port 8080
  #   container_name: coverse-api
  #   env_file:
  #     - .env
  #   environment:
  #     - WATCHFILES_FORCE_POLLING=true
  #     - DOMAIN=${DOMAIN}
  #   build: ./api
  #   ports:
  #     - "8080:8080"
  #   volumes:
  #     - ./api/:/api
  #   depends_on:
  #     db:
  #       condition: service_started
  #     migrate:
  #       condition: service_completed_successfully
  #   networks:
  #     - server-net
  #   restart: always
  #   labels:
  #     logging: "promtail"
  #     logging_jobname: "coverse-api"
  #   # healthcheck:
  #   #   test: curl --fail http://0.0.0.0:8080/health || exit 1
  #   #   interval: 120s
  #   #   timeout: 10s
  #   #   retries: 3
  #   #   start_period: 15s

  pwa:
    # port 8085
    container_name: coverse-pwa
    build: ./web_app
    ports:
      - "8085:8085"
    volumes:
      - ./web_app/:/app
    # depends_on:
    #   api:
    #     condition: service_started
    env_file:
      - ./web_app/.webapp.env
    # environment:
      # - COVERSE_API_URL=http://coverse-api:8080/api
      # - COVERSE_API_URL=https://coverse-api.lamagicx.eu/api
      # - COVERSE_API_URL=http://host.docker.internal:8080/api
    restart: always
    # include in server net for caddy.
    networks:
      - server-net
    labels:
      logging: "promtail"
      logging_jobname: "coverse-pwa"

  # docs:
  #   container_name: coverse-docs 
  #   build: ./docs 
  #   networks:
  #     - server-net

      # caddy:
      #   image: caddy
      #   container_name: coverse-caddy
      #   command: caddy reverse-proxy --from :80 --to fastapi:8080
      #   ports:
      #     - "80:80"
      #   restart: always
      #   depends_on:
      #     - fastapi
      #   networks:
      #     - server-net

networks:
  server-net:
    driver: bridge
    external: true
